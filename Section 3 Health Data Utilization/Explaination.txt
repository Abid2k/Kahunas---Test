"""
This code simulates and analyzes health data for 100 users. Here's a step-by-step explanation:

1. Imports:
   - `random`, `numpy` (as `np`), and `pandas` (as `pd`) are imported for data generation and manipulation.

2. Simulate Health Data:
   - The `simulate_health_data` function generates health data for a specified number of users (default is 100).
   - For each user, it simulates:
     - `daily_steps`: Normally distributed around 6000 steps with a standard deviation of 2000, clipped to the range 0-20000.
     - `heart_rate`: Normally distributed around 72 beats per minute with a standard deviation of 10, clipped to the range 40-100.
     - `sleep_quality`: Normally distributed around 7 with a standard deviation of 1.5, clipped to the range 1-10.
   - The data is stored in a list of dictionaries and converted to a pandas DataFrame.

3. Analyze Data:
   - The `analyze_data` function takes a DataFrame as input and performs analysis:
     - Calculates average daily steps and heart rate grouped by sleep quality.
     - Computes the correlation between sleep quality and daily steps, and between sleep quality and heart rate.
   - The results are stored in a dictionary for further use.

4. Generate Insights:
   - The `generate_insights` function provides personalized advice based on the user's health data:
     - If sleep quality is less than 5, it suggests improving sleep habits.
     - If daily steps are less than 5000, it suggests increasing daily steps to at least 7000.
     - If heart rate is above 90, it suggests maintaining a balanced routine to lower resting heart rate.
   - The insights are stored in a list of dictionaries.

5. Main Function:
   - The `main` function ties everything together:
     - Generates health data.
     - Analyzes the data.
     - Generates insights.
     - Displays the results, including correlations and sample insights for the first 5 users.
"""
